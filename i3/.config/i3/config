# This file is a modified version based on default i3-config-wizard config. The source is available here:
# https://raw.githubusercontent.com/endeavouros-team/endeavouros-i3wm-setup/master/.config/i3/config
# Maintainer: joekamprad [joekamprad@endeavouros.com]
# https://endeavouros.com
#
# iconic font icon search: https://fontawesome.com/v4.7/cheatsheet/
#
# --> to update this run the following command (will backup existing setup file)
# wget --backups=1 https://raw.githubusercontent.com/endeavouros-team/endeavouros-i3wm-setup/main/.config/i3/config -P ~/.config/i3/
#
#######################
# config starts here: #
#######################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Noto Sans Regular 10

# Display for second monitor
exec --no-startup-id xrandr --output HDMI1 --auto --right-of eDPI &

# Start picom
exec --no-startup-id picom -b --experimental-backends --config ~/.config/picom/picom.conf

# set the mod key to the winkey:
set $mod Mod4

#####################
# workspace layout: #
#####################

# default i3 tiling mode: Check docs for more tiling modes
workspace_layout default

##############################
# extra options for windows: #
##############################

#border indicator on windows:
new_window pixel 1

# Set inner/outer gaps
smart_gaps on
gaps inner 3
gaps outer 1

smart_borders on
smart_borders no_gaps
# border radius 2
# border_radius 2

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# Keeping the following lines here for remembering
# switch to workspace with numpad keys 
# switch to workspace with numlock numpad keys

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

# move focused container to workspace with numpad keys
# move focused container to workspace with numpad keys

# resize window (you can also use the mouse for that):
bindsym $mod+r mode "resize"
mode "resize" {
# same bindings, but for the arrow keys
		bindsym Left resize shrink width 10 px or 10 ppt
		bindsym Down resize grow height 10 px or 10 ppt
		bindsym Up resize shrink height 10 px or 10 ppt
		bindsym Right resize grow width 10 px or 10 ppt

		# back to normal: Enter or Escape
		#	bindsym Return mode "default"
		bindsym Escape mode "default"
}

######################################
# keybindings for different actions: #
######################################

# start a terminal
bindsym $mod+Return exec kitty

# Polybar Launch script
exec_always --no-startup-id ~/.config/polybar/launch.sh

# kill focused window
bindsym $mod+q kill

# exit-menu
bindsym $mod+Shift+e exec ~/.config/i3/scripts/powermenu

# Lock the system
bindsym $mod+l exec ~/.config/i3/scripts/blur-lock

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Shift+r restart

# Hints for keybinding in fancy rofi (automated):
bindsym F1 exec ~/.config/i3/scripts/keyhint-2

# Backlight control
bindsym XF86MonBrightnessUp exec xbacklight +5 && notify-send "Brightness - $(xbacklight -get | cut -c1-2)%"
bindsym XF86MonBrightnessDown exec xbacklight -5 && notify-send "Brightness - $(xbacklight -get | cut -c1-2)%"

# change focus of tiled windows: I use the cursor keys like a noob. Dont @me.
# Update: I use the touchpad mostly to change focus now.
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# move tiled windows using cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# I use autotiling so the following commands are not needed.
# split in horizontal orientation
# bindsym $mod+h split h
# split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+g layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating / bring stuff back from scratchpad
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Move currently focused window to scratchpad
bindsym $mod+Shift+s move scratchpad

# Show / cycle through scratchpad windows 
bindsym $mod+s scratchpad show

## Multimedia Keys

# volume
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# mute
bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks

# audio control
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Redirect sound to headphones
bindsym $mod+p exec /usr/local/bin/switch-audio-port

## App shortcuts: I don't use these. Just use Rofi. Takes a couple of extra keystrokes and frees up keybindings.
# bindsym $mod+w exec /usr/bin/firefox
# bindsym $mod+n exec /usr/bin/thunar
bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"

# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec ~/.config/i3/scripts/power-profiles

##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
workspace $ws1 output eDP1
workspace $ws2 output eDP1
workspace $ws3 output eDP1
workspace $ws4 output eDP1
workspace $ws5 output HDMI1
workspace $ws6 output HDMI1
workspace $ws7 output HDMI1
workspace $ws8 output HDMI1

# bind program to workspace and focus to them on startup:
assign [class="kitty"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="(?i)google-chrome"] $ws2
assign [class="Thunar"] $ws3
assign [class="vlc"] $ws4
# assign [class="thunderbird"] $ws7
# assign [class="Steam"] $ws9
# assign [class="TelegramDesktop"] $ws5

# automatic set focus new window if it opens on another workspace then the current:
for_window [class=Xfce4-terminal] focus
for_window [class=kitty] focus
for_window [class=vlc] focus
for_window [class=(?i)firefox] focus
for_window [class=(?i)google-chrome] focus
for_window [class=Thunar] focus
for_window [class=Steam] focus
for_window [class=thunderbird] focus
# for_window [class=TelegramDesktop] focus

#############################################
# autostart applications/services on login: #
#############################################

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# num lock activated
exec --no-startup-id numlockx on

# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor:
exec --no-startup-id ~/.screenlayout/monitor.sh

# set wallpaper
exec --no-startup-id sleep 2 && nitrogen --restore

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# use xautolock to use autosuspend rules for mobile devices
# https://wiki.archlinux.org/title/Session_lock#xautolock
#exec --no-startup-id xautolock -time 60 -locker "systemctl suspend"

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc

# autotiling script only for terminal
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling ;) (it is in AUR)
exec_always --no-startup-id autotiling -d --workspaces 1

# Autostart kitty terminal
exec --no-startup-id sleep 1 && kitty

###############
# system tray #
###############
# if you do not use dex: exec --no-startup-id dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueberry app for managing bluetooth devices from tray:
#exec --no-startup-id blueberry-tray

# networkmanager-applet
#exec --no-startup-id nm-applet

# clipman-applet
#exec --no-startup-id xfce4-clipman

##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border pixel 2 move absolute position center


# set border of floating window
for_window [class="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class=".*"] resize set 640 480 #to change size of all floating windows 

# set position of floating window
#for_window [class=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    $lightblue	$darkblue	$white		$purple		$mediumgrey
client.unfocused	    $darkblue	$darkblue	$grey		$purple		$darkgrey
client.focused_inactive	$darkblue	$darkblue	$grey		$purple		$black
client.urgent		    $urgentred	$urgentred	$white		$purple		$yellowbrown


#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

bindsym $mod+d exec rofi -modi drun -show drun \
		-config ~/.config/rofi/rofidmenu.rasi

bindsym $mod+t exec rofi -show window \
		-config ~/.config/rofi/rofidmenu.rasi

# There are other rofi launcher options (not needed for now).

############################################
# We use Polybar so we do not need to the next section.
# I am keeping it however, in case Polybar breaks.
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
#bar {
#		font pango: Noto Sans Regular 10
#		status_command i3blocks -c ~/.config/i3/i3blocks.conf
#	    	position top
###	    	i3bar_command i3bar --transparency
### it could be that you have no primary display set: set one (xrandr --output <output> --primary)
### reference: https://i3wm.org/docs/userguide.html#_tray_output
#		    tray_output primary
#		    tray_padding 0
##
### When strip_workspace_numbers is set to yes,
### any workspace that has a name of the form
### “[n][:][NAME]” will display only the name.
# strip_workspace_numbers yes
####strip_workspace_name no
##
#		    colors {
#		    separator          $purple
#		    background         $darkgrey
#		    statusline         $white
##                          		border 		        bg		txt		indicator
#		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
#		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
#		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
#		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
#	}
#}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

# bar {
#	font pango: Noto Sans Regular 10
#	status_command i3blocks -c ~/.config/i3/i3blocks-2.conf
#	i3bar_command i3bar --transparency
#	output HDMI-0
#	position bottom
#
# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
# strip_workspace_numbers yes
##strip_workspace_name no
#
#	colors {
#		separator          $purple
#		background         $darkbluetrans
#        	statusline         $white
#					border		bg		txt		indicator
#		focused_workspace	$lighterblue	$lighterblue	$darkblue	$purple
#		active_workspace	$lightdblue	$lightdblue	$darkblue	$purple
#		inactive_workspace	$darkblue	$darkblue	$lightdblue	$purple
#		urgent_workspace	$urgentred	$urgentred	$white		$purple
#	}
#}
